name: Create and publish a Docker image for Linux
on:
  release:
    types: ["published"]
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      # Uses the `docker/login-action` action to log in to the Container registry registry using the account and password that will publish the packages. Once published, the packages are scoped to the account defined here.
      - name: Log in to the Container registry
        uses: redhat-actions/podman-login@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Image as latest
        id: build-latest
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME }}
          tags: latest
          containerfiles: |
            ./Dockerfile
          context: .
      - name: Push Image as latest
        id: push-latest
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-latest.outputs.image }}
          tags: latest,${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          registry: ${{ env.REGISTRY }}
      - name: Push Image as release tag
        id: push-ref
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-latest.outputs.image }}
          tags: ${{ github.ref_name }},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
          registry: ${{ env.REGISTRY }}

      # # This step generates an artifact attestation for the image, which is an unforgeable statement about where and how it was built. It increases supply chain security for people who consume the image. For more information, see "[AUTOTITLE](/actions/security-guides/using-artifact-attestations-to-establish-provenance-for-builds)." 
      # - name: Generate artifact attestation
      #   uses: actions/attest-build-provenance@v1
      #   with:
      #     subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
      #     subject-digest: ${{ steps.push.outputs.digest }}
      #     push-to-registry: true
      
